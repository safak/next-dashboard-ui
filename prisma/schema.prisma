// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Academy {
  id Int @id @default(autoincrement())
  academyName String
  academyOwnerId Int
  
}


model Admin {
  id String @id
  username String @unique
  email String @unique
}

model Member {
  id String @id
  username String @unique
  name String
  surname String
  email String? @unique
  phone String?
  address String?
  img String?
  bloodType String?
  sex MemberSex
  createdOn DateTime @default(now())
  
  attendance Attendance[]
  
  hmdBeltId Int
  hmdBelt HMDBelts @relation(fields:[hmdBeltId], references: [id])

  kickBeltId Int
  kickBelt KickBelts @relation(fields:[kickBeltId], references: [id])

  parentId String
  parent Parent @relation(fields: [parentId], references: [id])
  lessons Lesson[]
}

model Parent {
  id String @id
  username String @unique
  name String
  surname String
  email String? @unique
  phone String?
  address String?
  createdOn DateTime @default(now())
  children Member[]  
}

 model Teacher{
  id String @id
  username String @unique
  name String
  surname String
  email String? @unique
  phone String?
  address String?
  img String?
  bloodType String?
  sex MemberSex
  createdOn DateTime @default(now())

  lessons Lesson[]
  classes Class[]
 }

  model Class{
    id Int @id @default(autoincrement())
    className String
    classDescription String
    capacity Int
    day Day
    startTime DateTime
    endTime DateTime

    lessons Lesson[]
    attendance Attendance[]

    teacherId String
    teacher Teacher @relation(fields: [teacherId], references: [id])

  }

   model Lesson{
    id Int @id @default(autoincrement())
    lessonName String @unique
    lessonDescription String
    
    teacherId String
    Teacher Teacher @relation(fields: [teacherId], references: [id])
    classId Int
    class Class @relation(fields: [classId], references: [id])
    memberId String
    member Member @relation(fields:[memberId], references:[id])
  }

  model HMDBelts{
    id Int @id @default(autoincrement())
    level String @unique

    members Member[]
  }

   model KickBelts{
    id Int @id @default(autoincrement())
    level String @unique

    members Member[]
  }

  model Attendance {
    id Int @id @default(autoincrement())
    date DateTime
    present Boolean

    memberId String
    member Member @relation(fields:[memberId], references: [id])
    classId Int
    class Class @relation(fields: [classId], references: [id])
  }

  model Announcements{
    id Int  @id @default(autoincrement())
    title String
    description String
    date DateTime

  }

  model Events{
    id Int  @id @default(autoincrement())
    startTime DateTime
    endTime DateTime
    title String
    description String
  } 


enum MemberSex{
  MALE
  FEMALE
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}